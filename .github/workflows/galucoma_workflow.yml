# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: galucoma workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# env:
#   WANDB_API: ${{ secrets.WANDB_KEY }}

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    # - name: Loging W&B
    #   shell: bash
    #   env:
    #     WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
    #     # WANDB_MODE: offline
    #     WANDB_CONSOLE: off
    #     # WANDB_ENTITY: ${{ secrets.WANDB_ENTITY }}
    #     # WANDB_PROJECT: ${{ secrets.WANDB_PROJECT }}
    #   run: wandb login "$WANDB_API_KEY"    

        
    # - name: Report WandB Results
    #   uses: bencevans/wandb-action@v1
    #   env:
    #     # GITHUB_TOKEN: ${{ github.token }}
    #     WANDB_MODE: offline
    #     WANDB_CONSOLE: off
    #     WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
    - name: Debug WandB Config
      shell: bash
      run: wandb status
    - name: Debug Environment Variable
      shell: bash
      run: echo ${{ secrets.WANDB_API_KEY }}
    
    - name: Loging W&B
      shell: bash
      run: wandb login ${{ secrets.WANDB_API_KEY }}
    # - name: Loging W&B
    #   run: |
    #     wandb login ${{ secrets.WANDB_API_KEY }}
    # - name: Test with pytest
    #   run: |
    #     pytest
    #   env:
    #     WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
    #     WANDB_ENTITY: ${{ secrets.WANDB_ENTITY }}
    #     WANDB_PROJECT: ${{ secrets.WANDB_PROJECT }}
    #     WANDB_MODE: offline
    #     WANDB_CONSOLE: off
        
